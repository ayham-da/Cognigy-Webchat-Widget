/// <reference types="node" />
import { EventEmitter } from "events";
import { Options } from "./interfaces/options";
export declare class SocketClient extends EventEmitter {
    socketUrl: string;
    socketURLToken: string;
    socketOptions: Options;
    private socket;
    private socketReconnectInterval;
    private reconnectCounter;
    private messageBuffer;
    private lastUsed;
    private static createDefaultSocketOptions;
    private static completeSocketOptions;
    constructor(socketUrl: string, socketToken: string, options?: Partial<Options>);
    private resetReconnectionCounter;
    private registerReconnectionAttempt;
    private shouldStopReconnecting;
    private flushMessageBuffer;
    private setupReconnectInterval;
    private updateLastUsed;
    readonly connected: boolean;
    readonly expired: boolean;
    connect(): Promise<any>;
    disconnect(): SocketClient;
    sendMessage(text: string, data?: any): SocketClient;
}
